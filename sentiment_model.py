import streamlit as st
from transformers import pipeline

st.set_page_config(
    page_title="Sentimental_ru",
    page_icon="üòé",
)
with st.spinner('–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ...'):
    classifier = pipeline("sentiment-analysis", "blanchefort/rubert-base-cased-sentiment")


def get_output(text):
    label = classifier(text)[0]['label']
    score = classifier(text)[0]['score']

    if label == 'POSITIVE':
        return st.write(
            f"–î–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–º–µ–µ—Ç **–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é** —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é {round(100 * score, 2)}%")
    elif label == 'NEGATIVE':
        return st.write(
            f"–î–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–º–µ–µ—Ç **–Ω–µ–≥–∞—Ç–∏–≤–Ω—É—é** —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é {round(100 * score, 2)}%")
    else:
        return st.write(
            f"–î–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–º–µ–µ—Ç **–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—É—é** —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é {round(100 * score, 2)}%")


with st.form(key="my_form"):
    text = st.text_area(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å (–º–∞–∫—Å–∏–º—É–º 500 —Å–ª–æ–≤)",
        height=300,
    )
    MAX_WORDS = 500
    import re

    res = len(re.findall(r"\w+", text))
    if res > MAX_WORDS:
        st.warning(
            "‚ö†Ô∏è –í–∞—à —Ç–µ–∫—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç "
            + str(res)
            + " —Å–ª–æ–≤."
            + " —Ç–æ–ª—å–∫–æ–µ –ø–µ—Ä–≤—ã–µ 500 —Å–ª–æ–≤ –±—É–¥—É—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏, —Å–∫–æ—Ä–æ –ª–∏–º–∏—Ç –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω! üòä"
        )

        text = text[:MAX_WORDS]
    submit_button = st.form_submit_button(label="‚ú® –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    if submit_button:
        with st.spinner('–ò–¥—ë—Ç –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞...'):
            get_output(text)
        st.success('–ì–æ—Ç–æ–≤–æ!')

if not submit_button:
    st.stop()
